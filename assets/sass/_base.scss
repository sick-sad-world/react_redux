*, *:after, *:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

@include selection() {
  background-color: map-get($colors, selection);
}

::-webkit-scrollbar {
  width: u(1.125);
  height: u(1.125);
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-track:vertical {
  border-left: 1px solid $c-sec-dk;
}

::-webkit-scrollbar-track:horizontal {
  border-top: 1px solid $c-sec-dk;
}
 
::-webkit-scrollbar-thumb {
  border-radius: u();
  background: darken($c-sec-dk, 10%);
}

html, body {
  margin: 0;
  color: $c-prm;
  background: $c-sec;
  font-size: $f-text;
  line-height: 1.875;
  font-weight: 400;
  font-family: $ff;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

a {
  color: $c-acc-sec-dk;
  text-decoration: none;
  cursor: pointer;
  &:hover,
  &:focus {
    text-decoration: underline;
    outline: 0;
  }
  &.icon-button {
    display: flex;
    width: $s-input;
    height: $s-input;
    svg {
      margin: auto;
    }
  }
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  line-height: 1.875;
  font-weight: 400;
}

h1, .t-h1 {
  font-size: $f-h1;
}

h2, .t-h2 {
  font-size: $f-h2;
}

h3, .t-h3 {
  font-size: $f-h3;
}

h4, .t-h4 {
  font-size: $f-h4;
}

h5, .t-h5 {
  font-size: $f-h5;
}

h6, .t-h6 {
  font-size: $f-h6;
}

mark {
  background-color: map-get($colors, selection);
}

dl {
  
}

dt {
  font-weight: 400;
  &:after {
    content: ":";
  }
}

dd {
  position: relative;
  padding-left: 1.8em;
  &:before {
    display: inline-block;
    content: "â€”";
    position: absolute;
    left: 0.4em;
  }
}

ul, ol {
  padding-left: 1.4em;
  ol, ul {
    margin: 0;
  }
}

ol ol {
  list-style-type: upper-alpha;
}

ul.small-list {
  padding: 0;
  list-style: none;
  font-size: $f-cap;
  li {
    display: inline-block;
    &:not(:last-child):after {
      content: ', ';
      margin-right: 4px;
    }
    &.state--empty {
      @include cap-styles();
    }
  }
}

hr {
  height: 1px;
  border: 0;
  background: map-get($colors, border);
}

code, kbd, pre, samp {
  font-size: 1em;
}

code, samp, kbd {
  display: inline-block;
  padding: 0 0.5em;
}

samp, .badge {
  $s: u(2.5);
  font-family: $ff;
  padding: 0px 1em;
  font-size: u(1.5);
  text-align: center;
  border-radius: $bdrs;
  height: $s;
  line-height: $s;
  // background-color: map-get($colors, highlight);
  text-transform: uppercase;
  &.style--raised {
    box-shadow: $sh-z3;
  }
  @each $style, $color in $states {
    &.#{$style} {
      background-color: $color;
      color: $c-sec;
    }
  }
  @each $style, $color in $styles {
    &.#{$style} {
      background-color: $color;
      color: $c-sec;
    }
  }
  @each $style, $color in $feeds {
    &.#{$style} {
      background-color: $color;
      color: $c-sec;
    }
  }

  &.status {
    width: 90px;
  }
}

pre {
  border-left: 3px solid $c-acc;
  background-color: $c-sec;
  padding: 0.5em;
  line-height: 1.125;
  overflow: auto;
}

blockquote {
  padding: 0.5em 1em;
  border-left: 3px solid $c-acc;
  background-color: $c-sec;
}

img {
	display: block;
  max-width: 100%;
  height: auto;
  a & {
    border: 0;
  }
}

svg:not(:root) {
  overflow: hidden;
}

svg[role="icon"] {
	fill: $c-prm-lt;
	width: $s-icon;
	height: $s-icon;
  pointer-events: none;
  use {
    pointer-events: none;
  }
}

table {
  width: 100%;
  max-width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  caption {
    text-align: left;
    font-size: $f-h3;
    line-height: 1;
  }
  td {
  }
  td, th {
    padding: 0.25em 0.5em;
  }
  >tr:last-child td, tr:last-child th {
  }
  thead td, th {
    text-align: left;
  }
  tfoot {

  }
}

%base-form-element {
  margin: 0;
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  line-height: normal;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
}

button,
input,
select,
textarea,
:global(.button) {
  @extend %base-form-element;
  &:focus {
    outline: 0;
  }
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

input:invalid {
  box-shadow: none;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  &::-webkit-search-cancel-button,
  &::-webkit-search-decoration {
    -webkit-appearance: none;
  }
}