@import 'mixins/_ph.scss';

@mixin ph-styles () {
  font-style: italic;
  font-weight: 300;
  transition: opacity $t-dur $t-func;
  color: color(caption);
}

@mixin cap-styles () {
  font-size: $f-cap;
  color: color(caption);
  line-height: 1.125;
  font-weight: 300;
}

@mixin dis-styles () {
  opacity: 0.65;
  cursor: default;
  user-select: none;
}

@mixin solid-styles($pos: relative, $anim: false, $or: top center) {
  position: $pos;
  z-index: z(popup);
  border-radius: $bdrs;
  box-shadow: shadow(2);
  background-color: color(element);
  @if ($anim) {
    transform-origin: $or;
    animation-name: zoomIn;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-duration: $t-dur;
  }
}

@mixin empty-styles() {
  font-style: italic;
  color: color(caption);
  font-size: 1.125em;
  text-align: center;
}

@mixin loading-styles() {

}

@mixin error-styles() {
  font-style: italic;
  color: color(error, dark);
  font-size: 1.125em;
  text-align: center;
}

@mixin button-raised ($main, $main-lt, $alt) {
  border-color: $main;
  background-color: $main;
  color: $alt;
  box-shadow: shadow();

  svg {
    fill: $alt;
  }

  &:not([disabled]):hover {
    background-color: $main-lt;
    border-color: $main-lt;
    color: $alt;
  }

  &:not([disabled]):focus {
    box-shadow: shadow(), 0 0 0 3px rgba($main, .25);
  }
}

@mixin button-simple ($main, $text: $main) {
  border-color: $main;
  color: $text;
  background-color: transparent;
  
  svg {
    fill: $main;
  }

  &:not([disabled]):hover {
    background-color: mix($main, #fff, 5%);
    color: $main;
  }

  &:not([disabled]):focus {
    box-shadow: 0 0 0 3px rgba($main, .25)
  }
}

@mixin style-blank-field() {
  position: relative;
  display: flex;
  align-items: center;
  svg {
    width: u(3);
    height: u(3);
    margin-right: u();
    opacity: 0.5;
  }
  input {
    height: $s-input;
    line-height: $s-input;
    border: 0;
    background: none;
    @include placeholder() {
      @include ph-styles();
      opacity: 0.6;
      transition: opacity $t-dur $t-func;
    }
    &:focus {
      @include placeholder() {
        opacity: 1;
      }
    }
  }
}

@mixin shadow-cover($c: color(secondary)) {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  background-color: $c;
}

@mixin shadow-bottom($c: rgba(#000,.33)) {
  position: absolute; 
  z-index: 0;
  background: $c;
  filter: blur(5px);
  bottom: 0;
  left: 2%;
  right: 2%;
  height: 5px;
  border-radius: 20% / 50%;
}