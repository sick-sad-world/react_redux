/* Result - main item on main dashboard result
========================================================================== */
.mod-result {
  padding: 0 baseUnit(0.5);
  line-height: baseUnit(2.25);
  font-size: baseUnit(2);
  $bar: baseUnit(.5);
  aside {
    $aside: 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    a {
			display: inline-flex;
			width: $aside;
			height: $aside;
      svg {
        width: 70%;
        height: 70%;
      }
			&:hover, &:focus {
				svg {
					fill: $c-accent;
				}
			}
		}
  }
  .comparator {
    font: 1em / 1 $heading-font-family;
    cursor: pointer;
    text-shadow: 0 0 2px #000;
    b {
      font-size: 1.25em;
    }
  }
  .result-link {
    color: inherit;
    display: block;
    &:hover, &:focus {
      text-decoration: none;
    }
  }
  small {
    display: flex;
    justify-content: space-between;
    line-height: baseUnit(3);
  }
  h1 {
    flex: 1 1 82%;
    font-size: 1.125em;
    line-height: 1.125;
    overflow: hidden;
    color: darken($c-accent, 10%);
    margin-bottom: baseUnit(.5);
    border-bottom: $bd;
  }
  .image {
    background-size: cover;
    background-position: center;
    position: relative;
    width: 100%;
    &:after {
      @include pos();
      content: '';
      background: url('../img/ph_content.png') center no-repeat;
      background-size: cover;
      z-index: -1;
    }
    img {
      display: block;
      width: 100%;
      height: 100%;
      opacity: 0;
    }
  }
  .text {
    display: flex;
    overflow: hidden;
    align-items: stretch;
    .image {
      flex: 0 0 40%;
    }
    .content {
      margin-left: baseUnit(.5);
      flex: 1 1 60%;
    }
  }
  table {
    margin-top: baseUnit();
    td, th {
      line-height: 1;
      font-size: 0.75em;
      border: $bd;
    }
    b {
      text-transform: capitalize;
    }
  }
  .hotness {
    position: relative;
    font-weight: bold;
    text-shadow: 0 0 4px #fff;
  }
  .color-bar {
    display: block;
    @include pos(0 0 0 0);
    z-index: -1;
    background-clip: content-box;
    background-image: linear-gradient(to left, nth($c-scale, 1), nth($c-scale, 2), nth($c-scale, 3));
    &.is-new {
      background: lighten(map-get($states, 'success'), 10%);
    }
  }
  &.is-placeholder {
    small {
      margin: baseUnit() 0 0 0;
      .line.very-short {
        margin: 0;
      }
    }
    .image {
      @include ph-bg();
    }
  }
}