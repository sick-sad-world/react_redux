/* Some customising for most complex form - Edit column
========================================================================== */
.mod-column-edit {
	.row-sorting {
		select[name="sort_prefix"],
		select[name="sort_prefix"]+.chosen-container {
			flex: 0 0 30%;
		}
		select[name="sort_param"],
		select[name="sort_param"]+.chosen-container {
			flex: 1 1 auto;
			margin: 0 baseUnit(0.5);
		}
	}
  table {
    label {
      text-indent: baseUnit();
      text-transform: capitalize;
    }
    .switcher-checkbox {
      margin-right: baseUnit();
    }
  }
  .adv-filters {
    fieldset {
      .row-flex {
        margin-bottom: baseUnit();
        >*:not(.button) {
          flex-grow: 1;
          flex-shrink: 1;
        }
      }
    }
  }
  .display-settings {
    ul {
      clear: both;
      list-style: none;
      padding: 0;
      display: flex;
      flex-wrap: wrap;
    }
    li {
      flex: 0 0 33%;
      margin: 0 0 baseUnit();
    }
  }
  .brief-list-container {
    clear: both;
    display: flex;
    margin-bottom: baseUnit();
  }
  .brief-list {
    flex: 0 0 50%;
    padding: 0;
    list-style: none;
    padding-right: baseUnit(.5);
    +.brief-list {
      padding-left: baseUnit(.5);
      padding-right: 0;
    }
    h4 {
      font-size: $base-font-size * 1.125;
    }
    li {
      display: block;
      max-width: 100%;
      width: 100%;
      position: relative;
      height: $base-line-height;
      overflow: hidden;
      font-size: 0.875em;
    }
    span {
      display: inline-block;
      max-width: 100%;
      @include pos(0 false false 0);
    }
    li.state-empty {
      color: darken($c-border, 18%);
      font-style: italic;
    }
  }
  .sorting-selects,
  .row-time-gap {
    > * {
      display: inline-block;
      vertical-align: top;
      &:not(:last-child) {
        margin-right: baseUnit(2);
      }
    }
  }
}