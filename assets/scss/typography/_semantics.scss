/* Text-level semantics
========================================================================== */

abbr[title] {
  cursor: help;
}

i, em {
  font-style: italic;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

mark {
  padding: 0 0.25em;
  background: #ffc;
}

small {
  font-size: 80%;
	line-height: 1.125;
}

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 80%;
  line-height: 0;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// @style different kinds of elements, like badges or icons, or iconed links or
// counters and other text-level stuff

/* Adresses
========================================================================== */

address {}

// @style adress here

/* Blockquotes
========================================================================== */

q {}

blockquote {}

/* Small elements
========================================================================== */

.line {
  @include ph-bg();
  border-radius: baseUnit();
  height: baseUnit(1.5);
  display: block;
  width: 100%;
  margin: 4px 0;
  &:first-child {
    margin-top: 0;
  }
  &.short {
    width: 66%;
  }
  &.very-short {
    width: 33%;
  }
}

.drag-handle {
  cursor: move;
  width: $pointer-unit;
  display: flex;
  svg {
    fill: $c-icon;
    margin: auto;
  }
}

.counter, .badge {
  display: inline-block;
	border-radius: $bdrs;
	@include style-accent-element();
  text-shadow: none;
	font-size: 0.75em;
  line-height: 1;
	padding: 2px baseUnit(0.5);
}

.counter {
  width: baseUnit(3);
}

.badge {
	// Colorize types
	//===============================================================
	&[data-type="HTML"] { @include gradient(map-get($states, success)); }
	&[data-type="RSS"] { @include gradient($c-accent-alt); }
	&[data-type="Twitter"] { @include gradient(map-get($states, info)); }
	&[data-type="Reddit"] { @include gradient(nth($c-scale, 3)); }
	&[data-type="Facebook"] { @include gradient(nth($c-scale, 1)); }
} 

.popup {
  display: flex;
  cursor: default;
  flex-direction: column;
  overflow: hidden;
  box-shadow: 0 5px 10px rgba(0,0,0,.45);
  border-radius: $bdrs * 2;
  z-index: map-get($layers, overlay) + 1;
  header {
    border-bottom: $bd;
    display: flex;
    justify-content: space-between;
    align-items: center;
    min-height: $entity-unit;
    padding: 0 baseUnit();
    .close {
      margin-right: baseUnit(-1);
      width: $entity-unit;
      align-self: stretch;
      display: flex;
      svg {
        margin: auto;
      }
    }
  }
  main {
    border-left: $bd;
    border-right: $bd;
    border-bottom: $bd;
    flex: 1 1 auto;
    padding: baseUnit();
    overflow: hidden;
  }
}

.confirmation-dialog {
  width: map-get($layout, buffer) * 1.25;
  background-color: $c-element;
  main {
    li {
      @include ellipsis();
    }
    .badge {
      vertical-align: 1px;
    }
  }
  footer {
    border-top: $bd;
    display: flex;
    padding: baseUnit();
  }
  .buttons {
    display: flex;
    justify-content: space-between;
  }
  .button {
    flex: 0 1 50%;
    + .button {
      margin-left: baseUnit();
    }
  }
}

.tab-bar {
  a {
    display: inline-block;
    color: $c-main;
    line-height: baseUnit(4);
    padding: 0 baseUnit(3);
    border-bottom: 3px solid transparent;
    &:hover, &:focus {
      text-decoration: none;
    }
    &.active {
      border-bottom-color: $c-accent;
    }
  }
}

.loading-bar {
	display: block;
	margin: auto;
	min-width: map-get($layout, min-width);
	width: map-get($layout, auth);
	height: baseUnit(0.5);
	background-color: rgba($c-alt, 0.1);
	&:before {
		display: block;
		content: attr(data-text);
		width: 100%;
		position: absolute;
		bottom: 100%;
		text-align: center;
		font-size: 0.875em;
		color: $c-alt;
	}
	span {
		display: block;
		width: 0%;
		height: 100%;
		//transition: width $dur;
		background-color: $c-alt;
	}
}

.custom-tooltip {
  border: $bd;
  width: 400px;
  display: flex;
  flex-wrap: wrap;
  background-color: $c-element;
  h3, h4 {
    margin: 0;
    padding: baseUnit();
    width: 100%;
    border-bottom: $bd;
  }
  h3 {
    font-size: 1.25em;
  }
  h4 {
    font-size: 1.125em;
    background-color: rgba($c-border, .25);
  }
  ul {
    width: 50%;
    list-style: none;
    padding: baseUnit();
  }
  li {
    display: flex;
    justify-content: space-between;
  }
}

.notification {
  $icon: $pointer-unit * 2;
  display: flex;
  background-color: $c-element;
  position: relative;
  align-items: center;
  .icon {
    display: flex;
    flex: 0 0 auto;
    width: $icon * 1.25;
    min-height: $icon * 1.25;
    align-self: stretch;
    img {
      margin: auto;
      width: $icon;
      height: $icon;
    }
    svg {
      width: $icon * 0.75;
      height: $icon * 0.75;
    }
  }
  div {
    padding: baseUnit();
    flex: 1 1 auto;
  }
  h5 {
    line-height: 1;
    font-size: 1.5em;
  }
  .close {
    @include pos(0 0 false false);
    line-height: 0;
    padding: baseUnit(0.5);
  }
  &.is-error {
    .icon {
      svg {
        fill: map-get($states, 'error');
      }
    }
  }
  &.is-warning {
    .icon {
      svg {
        fill: map-get($states, 'warning');
      }
    }
  }
  &.is-info {
    .icon {
      svg {
        fill: map-get($states, 'info');
      }
    }
  }
  &.is-success {
    .icon {
      svg {
        fill: map-get($states, 'success');
      }
    }
  }
}

.global-error {
  $c: map-get($states, 'error');
  $lc: lighten($c, 20%);
  margin: auto;
  position: relative;
  width: map-get($layout, popup);
  background-color: $lc;
  box-shadow: 0 0 20px rgba(#000,.25), 0 0 150px rgba($lc, 1);
  padding: baseUnit();
  cursor: default;
  overflow: hidden;
  div {
    border: 1px solid $c;
    padding: baseUnit();
    position: relative;
    z-index: 1;
  }
  svg.bg {
    position: absolute;
    bottom: -12px;
    right: -12px;
    fill: $c;
    width: baseUnit(10);
    height: baseUnit(10);
    opacity: 0.5;
    z-index: 0;
  }
}