/* Text-level semantics
========================================================================== */

abbr[title] {
  cursor: help;
}

i, em {
  font-style: italic;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

mark {
  padding: 0 0.25em;
  background: #ffc;
}

small {
  font-size: 80%;
	line-height: 1.125;
}

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 80%;
  line-height: 0;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// @style different kinds of elements, like badges or icons, or iconed links or
// counters and other text-level stuff

/* Adresses
========================================================================== */

address {}

// @style adress here

/* Blockquotes
========================================================================== */

q {}

blockquote {}

/* Small elements
========================================================================== */
.counter, .badge {
  display: inline-block;
	border-radius: $bdrs;
	@include style-accent-element();
  text-shadow: none;
	font-size: 0.75em;
  line-height: 1;
	padding: 2px baseUnit(0.5);
}

.counter {
  width: baseUnit(3);
}
.badge {
	// Colorize types
	//===============================================================
	&[data-type="HTML"] { @include gradient(map-get($states, success)); }
	&[data-type="RSS"] { @include gradient($c-accent-alt); }
	&[data-type="Twitter"] { @include gradient(map-get($states, info)); }
	&[data-type="Reddit"] { @include gradient(nth($c-scale, 3)); }
	&[data-type="Facebook"] { @include gradient(nth($c-scale, 1)); }
} 

.small-popup {
  padding: baseUnit();
  border: $bd;
  background-color: $c-element;
  box-shadow: 0 5px 10px rgba(0,0,0,.45);
  border-radius: $bdrs * 2;
}

.delete-confirmation {
  position: relative;
  &:before, &:after {
    content: '';
    display: block;
    margin: auto;
    width: 0;
    height: 0;
    @include pos(100% 0 false 0);
    border: baseUnit() solid transparent;
  }
  &:before {
    border-top-color: $c-border;
    border-left-color: $c-border;
    border-width: baseUnit() + 1;
  }
  &:after {
    border-top-color: $c-element;
    border-left-color: $c-element;
  }
  .text {
    display: block;
    margin-bottom: baseUnit();
  }
  p {
    display: flex;
    justify-content: space-between;
  }
  .button {
    flex: 0 1 50%;
    + .button {
      margin-left: baseUnit();
    }
  }
}

.loading-bar {
	display: block;
	margin: auto;
	min-width: map-get($layout, min-width);
	width: map-get($layout, auth);
	height: baseUnit(0.5);
	background-color: rgba($c-alt, 0.1);
	&:before {
		display: block;
		content: attr(data-text);
		width: 100%;
		position: absolute;
		bottom: 100%;
		text-align: center;
		font-size: 0.875em;
		color: $c-alt;
	}
	span {
		display: block;
		width: 0%;
		height: 100%;
		transition: width $dur;
		background-color: $c-alt;
	}
}