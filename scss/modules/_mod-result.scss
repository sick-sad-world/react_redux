/* Result - main item on main dashboard result
========================================================================== */
.mod-result {
	line-height: 1;
	font-size: 14px;
	clear: both;
	width: 100%;
	$aside: baseUnit(6);
  &:after {
    content: '';
    display: block;
    clear: both;
  }
  .content {
    margin: 0 baseUnit(0.5);
  }
	aside + .content {
		margin-left: $aside + baseUnit();
	}
	header, h1 {
		margin-bottom: baseUnit(0.5);
	}
	header, .descr > div {
		padding-right: baseUnit(0.5);
	}
	h1, small {
		line-height: 1;
	}
	h1 {
		font-size: 1.25em;
	}
	small {
		display: inline-block;
		width: 100%;
	}
  img {
    margin: auto;
    display: block;
  }
	figure {
    position: relative;
    background-color: $c-main;
    &:not(.is-wide) {
      float: left;
      width: 45%;
      margin-right: baseUnit();
    }
	}
  figcaption {
    @include pos(false 0 0 0);
    background-color: rgba(#000, .75);
    font-size: 1.25em;
    color: $c-alt;
    padding: baseUnit();
  }
	aside {
		float: left;
		width: $aside;
		margin: 0 baseUnit(0.5) baseUnit(0.5);
		position: relative;
		>a {
			display: flex;
			width: 100%;
			height: $entity-unit;
			&:hover, &:focus {
				svg {
					fill: $c-accent;
				}
			}
		}
	}
	&:hover aside, aside.is-expanded {
		a {
			transform: translate3d(0, 0, 0);
		}
	}
	.comparator {
		display: block;
		padding: baseUnit(0.5) round(baseUnit(0.5)/2);
		border-radius: $bdrs;
		font: 0.875em / 1 $heading-font-family;
		text-align: center;
		text-shadow: $sh-text;
		cursor: pointer;
		b {
			display: block;
			font-size: 1.125em;
		}
	}
	.descr {
		line-height: 1.25;
		.btn-toggle-text {
			display: block;
			text-align: center;
			&:before {
				color: inherit;
			}
		}
	}
	table {
		font-size: 0.75em;
		line-height: 1;
		a {
			font-weight: bold;
		}
		th, td {
			padding: baseUnit(0.5);
			border-bottom: $bd;
		}
		tr td:last-child {
			padding: 0;
			div {
				position: relative;
				padding: baseUnit(0.5) baseUnit(0.5) baseUnit();
			}
		}
		.color-bar {
			display: block;
			height: baseUnit() - 4px;
			@include pos(false 0 0 0);
			background-clip: content-box;
			background-image: linear-gradient(to left, nth($c-scale, 1), nth($c-scale, 2), nth($c-scale, 3));
			&.is-new {
				background: $c-accent;
			}
		}
	}
}